One of the fascinating things about R is how quickly you can go from static plots to animated graphics. This week, I explored the {animation} package, developed by Yihui Xie, to create a simple but fun animation using only a few lines of code.

The goal? Animate the randomness of 10 points over 10 frames. The result is a flickering visualization of chaotic yet bounded data, thanks to the runif() function which generates uniform random numbers.

Here’s the snippet I used to generate the GIF:

library(animation)

saveGIF({
for (i in 1:10) {
plot(runif(10), ylim = c(0, 1), main = paste("Frame", i))
}
}, movie.name = "random_plot.gif")

The beauty of the {animation} package is in its simplicity—no need for complex dependencies or frameworks. The GIF it outputs can be easily embedded in blog posts or presentations.

Bryan’s blog post on animation in R (linked here) also provided useful inspiration. He emphasizes how even basic animations can make data storytelling more engaging—and I couldn’t agree more.

If you’re new to animations in R, definitely check out Yihui Xie’s animation package documentation. It’s well-documented, accessible, and powerful.

Even a basic animation can breathe life into static data. With {animation}, a few lines of R code can illustrate dynamics, change, or randomness in a visually compelling way.
